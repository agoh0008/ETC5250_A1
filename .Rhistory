# Model 2
TP_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 == "bilby")
TN_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 == "quokka")
accuracy_2 <- (TP_2 + TN_2)/nrow(d_pred)
FN_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 != "bilby")
TPR_2 <- TP_2 / (TP_2 + FN_2)
FP_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 != "quokka")
TNR_2 <- TN_2 / (TN_2 + FP_2)
balanced_accuracy_2 <- (TPR_2 + TNR_2)/2
cat("Model 1:\n")
cat("Accuracy:", round(accuracy_1, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_1, 3), "\n\n")
cat("Model 2:\n")
cat("Accuracy:", round(accuracy_2, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_2, 3), "\n")
# Threshold of 0.3 (Model 1)
sensitivity_1 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.3) / sum(d_pred$y == "bilby")
specificity_1 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_1 <- 1 - specificity_1
# Threshold of 0.4 (Model 1)
sensitivity_2 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.4) / sum(d_pred$y == "bilby")
specificity_2 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_2 <- 1 - specificity_2
# Print the results
cat("For Model 1:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_1, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_1, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_2, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_2, 3), "\n\n")
# Threshold of 0.3 (Model 2)
sensitivity_3 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.3) / sum(d_pred$y == "bilby")
specificity_3 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_3 <- 1 - specificity_3
# Threshold of 0.4 (Model 2)
sensitivity_4 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.4) / sum(d_pred$y == "bilby")
specificity_4 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_4 <- 1 - specificity_4
# Print the results
cat("For Model 2:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_3, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_3, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_4, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_4, 3), "\n\n")
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
lines(roc_curve_2, col = "red")
legend("bottomright",
legend = c("Model 1", "Model 2"),
col = c("blue", "red"), lty = 1)
auc_1 <- auc(roc_curve_1)
auc_2 <- auc(roc_curve_2)
auc_1
auc_2
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
scatter_matrix <- ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw()
ggplotly(scatter_matrix, width = 600, height = 600)
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw()
library(uwot)
library(tibble)
set.seed(253)
c7_umap <- umap(c7[,1:6], init = "spca")
c7_umap_df <- c7_umap %>%
as_tibble() %>%
rename(UMAP1 = V1, UMAP2 = V2)
ggplot(c7_umap_df, aes(x = UMAP1,
y = UMAP2)) +
geom_point(colour = "#EC5C00") +
theme_bw()
library(readr)
auswt20 <- read_csv("https://raw.githubusercontent.com/numbats/iml/master/data/auswt20.csv")
numeric_columns <- sapply(auswt20, is.numeric)
auswt_numeric <- auswt20[, numeric_columns]
auswt_pca <- prcomp(auswt_numeric, scale = TRUE)
summary(auswt_pca)
mulgar::ggscree(auswt_pca, q=21) +
theme_bw() +
ggtitle("Scree Plot")
auswt_pca_smry <- tibble(evl=auswt_pca$sdev^2) %>%
mutate(p = evl/sum(evl),
cum_p = cumsum(evl/sum(evl))) %>%
t() %>%
as.data.frame()
colnames(auswt_pca_smry) <- colnames(auswt_pca$rotation)
auswt_pca_smry <- bind_rows(as.data.frame(auswt_pca$rotation),
auswt_pca_smry)
rownames(auswt_pca_smry) <- c(rownames(auswt_pca$rotation),
"Variance", "Proportion",
"Cum. prop")
auswt_pca_smry[,1:5]
library(ggfortify)
biplot <- autoplot(auswt_pca, loadings = TRUE, loadings.label = TRUE) +
theme_bw() +
ggtitle("Biplot of PCA Loadings for Australian Women's Cricket Statistics")
biplot + geom_text(aes(label = auswt20$Player),
size = 3,
hjust = 0,
vjust = 0,
nudge_y = 0.02)
S <- matrix(c(3, 1, 1, 2), nrow = 2, byrow = TRUE)
X <- matrix(c(4, 2), nrow = 2)
A <- matrix(c(1, -1), nrow = 2)
# Inverse of S:
S_inv <- solve(S)
# Compute (X-A)^T S^(-1) (X-A):
answer <- t(X-A) %*% S_inv %*% (X-A)
cat("The answer is:", answer)
library(tidyverse)
library(dplyr)
d_pred <- read_csv("https://raw.githubusercontent.com/numbats/iml/master/data/pred_data.csv")
d_pred %>% slice_head(n=3)
# Model 1
TP_1 <- sum(d_pred$y == "bilby" & d_pred$pred1 == "bilby")
TN_1 <- sum(d_pred$y == "quokka" & d_pred$pred1 == "quokka")
accuracy_1 <- (TP_1 + TN_1)/nrow(d_pred)
FN_1 <- sum(d_pred$y == "bilby" & d_pred$pred1 != "bilby")
TPR_1 <- TP_1 / (TP_1 + FN_1)
FP_1 <- sum(d_pred$y == "quokka" & d_pred$pred1 != "quokka")
TNR_1 <- TN_1 / (TN_1 + FP_1)
balanced_accuracy_1 <- (TPR_1 + TNR_1)/2
# Model 2
TP_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 == "bilby")
TN_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 == "quokka")
accuracy_2 <- (TP_2 + TN_2)/nrow(d_pred)
FN_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 != "bilby")
TPR_2 <- TP_2 / (TP_2 + FN_2)
FP_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 != "quokka")
TNR_2 <- TN_2 / (TN_2 + FP_2)
balanced_accuracy_2 <- (TPR_2 + TNR_2)/2
cat("Model 1:\n")
cat("Accuracy:", round(accuracy_1, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_1, 3), "\n\n")
cat("Model 2:\n")
cat("Accuracy:", round(accuracy_2, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_2, 3), "\n")
# Threshold of 0.3 (Model 1)
sensitivity_1 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.3) / sum(d_pred$y == "bilby")
specificity_1 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_1 <- 1 - specificity_1
# Threshold of 0.4 (Model 1)
sensitivity_2 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.4) / sum(d_pred$y == "bilby")
specificity_2 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_2 <- 1 - specificity_2
# Print the results
cat("For Model 1:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_1, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_1, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_2, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_2, 3), "\n\n")
# Threshold of 0.3 (Model 2)
sensitivity_3 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.3) / sum(d_pred$y == "bilby")
specificity_3 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_3 <- 1 - specificity_3
# Threshold of 0.4 (Model 2)
sensitivity_4 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.4) / sum(d_pred$y == "bilby")
specificity_4 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_4 <- 1 - specificity_4
# Print the results
cat("For Model 2:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_3, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_3, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_4, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_4, 3), "\n\n")
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
lines(roc_curve_2, col = "red")
legend("bottomright",
legend = c("Model 1", "Model 2"),
col = c("blue", "red"), lty = 1)
auc_1 <- auc(roc_curve_1)
auc_2 <- auc(roc_curve_2)
auc_1
auc_2
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
lines(roc_curve_2, col = "red")
legend("bottomright",
legend = c("Model 1", "Model 2"),
col = c("blue", "red"), lty = 1)
auc_1 <- auc(roc_curve_1)
auc_2 <- auc(roc_curve_2)
auc_1
auc_2
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw()
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
S <- matrix(c(3, 1, 1, 2), nrow = 2, byrow = TRUE)
X <- matrix(c(4, 2), nrow = 2)
A <- matrix(c(1, -1), nrow = 2)
# Inverse of S:
S_inv <- solve(S)
# Compute (X-A)^T S^(-1) (X-A):
answer <- t(X-A) %*% S_inv %*% (X-A)
cat("The answer is:", answer)
library(tidyverse)
library(dplyr)
d_pred <- read_csv("https://raw.githubusercontent.com/numbats/iml/master/data/pred_data.csv")
d_pred %>% slice_head(n=3)
# Model 1
TP_1 <- sum(d_pred$y == "bilby" & d_pred$pred1 == "bilby")
TN_1 <- sum(d_pred$y == "quokka" & d_pred$pred1 == "quokka")
accuracy_1 <- (TP_1 + TN_1)/nrow(d_pred)
FN_1 <- sum(d_pred$y == "bilby" & d_pred$pred1 != "bilby")
TPR_1 <- TP_1 / (TP_1 + FN_1)
FP_1 <- sum(d_pred$y == "quokka" & d_pred$pred1 != "quokka")
TNR_1 <- TN_1 / (TN_1 + FP_1)
balanced_accuracy_1 <- (TPR_1 + TNR_1)/2
# Model 2
TP_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 == "bilby")
TN_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 == "quokka")
accuracy_2 <- (TP_2 + TN_2)/nrow(d_pred)
FN_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 != "bilby")
TPR_2 <- TP_2 / (TP_2 + FN_2)
FP_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 != "quokka")
TNR_2 <- TN_2 / (TN_2 + FP_2)
balanced_accuracy_2 <- (TPR_2 + TNR_2)/2
cat("Model 1:\n")
cat("Accuracy:", round(accuracy_1, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_1, 3), "\n\n")
cat("Model 2:\n")
cat("Accuracy:", round(accuracy_2, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_2, 3), "\n")
# Threshold of 0.3 (Model 1)
sensitivity_1 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.3) / sum(d_pred$y == "bilby")
specificity_1 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_1 <- 1 - specificity_1
# Threshold of 0.4 (Model 1)
sensitivity_2 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.4) / sum(d_pred$y == "bilby")
specificity_2 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_2 <- 1 - specificity_2
# Print the results
cat("For Model 1:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_1, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_1, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_2, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_2, 3), "\n\n")
# Threshold of 0.3 (Model 2)
sensitivity_3 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.3) / sum(d_pred$y == "bilby")
specificity_3 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_3 <- 1 - specificity_3
# Threshold of 0.4 (Model 2)
sensitivity_4 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.4) / sum(d_pred$y == "bilby")
specificity_4 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_4 <- 1 - specificity_4
# Print the results
cat("For Model 2:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_3, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_3, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_4, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_4, 3), "\n\n")
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
S <- matrix(c(3, 1, 1, 2), nrow = 2, byrow = TRUE)
X <- matrix(c(4, 2), nrow = 2)
A <- matrix(c(1, -1), nrow = 2)
# Inverse of S:
S_inv <- solve(S)
# Compute (X-A)^T S^(-1) (X-A):
answer <- t(X-A) %*% S_inv %*% (X-A)
cat("The answer is:", answer)
library(tidyverse)
library(dplyr)
d_pred <- read_csv("https://raw.githubusercontent.com/numbats/iml/master/data/pred_data.csv")
d_pred %>% slice_head(n=3)
S <- matrix(c(3, 1, 1, 2), nrow = 2, byrow = TRUE)
X <- matrix(c(4, 2), nrow = 2)
A <- matrix(c(1, -1), nrow = 2)
# Inverse of S:
S_inv <- solve(S)
# Compute (X-A)^T S^(-1) (X-A):
answer <- t(X-A) %*% S_inv %*% (X-A)
cat("The answer is:", answer)
# Model 1
TP_1 <- sum(d_pred$y == "bilby" & d_pred$pred1 == "bilby")
TN_1 <- sum(d_pred$y == "quokka" & d_pred$pred1 == "quokka")
accuracy_1 <- (TP_1 + TN_1)/nrow(d_pred)
FN_1 <- sum(d_pred$y == "bilby" & d_pred$pred1 != "bilby")
TPR_1 <- TP_1 / (TP_1 + FN_1)
FP_1 <- sum(d_pred$y == "quokka" & d_pred$pred1 != "quokka")
TNR_1 <- TN_1 / (TN_1 + FP_1)
balanced_accuracy_1 <- (TPR_1 + TNR_1)/2
# Model 2
TP_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 == "bilby")
TN_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 == "quokka")
accuracy_2 <- (TP_2 + TN_2)/nrow(d_pred)
FN_2 <- sum(d_pred$y == "bilby" & d_pred$pred2 != "bilby")
TPR_2 <- TP_2 / (TP_2 + FN_2)
FP_2 <- sum(d_pred$y == "quokka" & d_pred$pred2 != "quokka")
TNR_2 <- TN_2 / (TN_2 + FP_2)
balanced_accuracy_2 <- (TPR_2 + TNR_2)/2
cat("Model 1:\n")
cat("Accuracy:", round(accuracy_1, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_1, 3), "\n\n")
cat("Model 2:\n")
cat("Accuracy:", round(accuracy_2, 3), "\n")
cat("Balanced Accuracy:", round(balanced_accuracy_2, 3), "\n")
# Threshold of 0.3 (Model 1)
sensitivity_1 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.3) / sum(d_pred$y == "bilby")
specificity_1 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_1 <- 1 - specificity_1
# Threshold of 0.4 (Model 1)
sensitivity_2 <- sum(d_pred$y == "bilby" & d_pred$bilby1 >= 0.4) / sum(d_pred$y == "bilby")
specificity_2 <- sum(d_pred$y == "quokka" & d_pred$bilby1 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_2 <- 1 - specificity_2
# Print the results
cat("For Model 1:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_1, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_1, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_2, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_2, 3), "\n\n")
# Threshold of 0.3 (Model 2)
sensitivity_3 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.3) / sum(d_pred$y == "bilby")
specificity_3 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.3) / sum(d_pred$y == "quokka")
minus_specificity_3 <- 1 - specificity_3
# Threshold of 0.4 (Model 2)
sensitivity_4 <- sum(d_pred$y == "bilby" & d_pred$bilby2 >= 0.4) / sum(d_pred$y == "bilby")
specificity_4 <- sum(d_pred$y == "quokka" & d_pred$bilby2 < 0.4) / sum(d_pred$y == "quokka")
minus_specificity_4 <- 1 - specificity_4
# Print the results
cat("For Model 2:\n")
cat("Threshold = 0.3\n")
cat("Sensitivity:", round(sensitivity_3, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_3, 3), "\n\n")
cat("Threshold = 0.4\n")
cat("Sensitivity:", round(sensitivity_4, 3), "\n")
cat("1 - Specificity:", round(minus_specificity_4, 3), "\n\n")
library(pROC)
# Model 1
roc_curve_1 <- roc(d_pred$y, d_pred$bilby1, levels = c("quokka", "bilby"))
# Model 2
roc_curve_2 <- roc(d_pred$y, d_pred$bilby2, levels = c("quokka", "bilby"))
plot(roc_curve_1, col = "blue", main = "ROC Curves for Model 1 and Model 2")
lines(roc_curve_2, col = "red")
legend("bottomright",
legend = c("Model 1", "Model 2"),
col = c("blue", "red"), lty = 1)
auc_1 <- auc(roc_curve_1)
auc_2 <- auc(roc_curve_2)
auc_1
auc_2
library(mulgar)
library(ggplot2)
library(GGally)
library(plotly)
ggpairs(c7) +
theme(axis.text = element_blank()) +
theme_bw() +
ggtitle("Pairwise Relationships and Distribution of Variables in Dataset c7")
library(uwot)
library(tibble)
set.seed(253)
c7_umap <- umap(c7[,1:6], init = "spca")
c7_umap_df <- c7_umap %>%
as_tibble() %>%
rename(UMAP1 = V1, UMAP2 = V2)
ggplot(c7_umap_df, aes(x = UMAP1,
y = UMAP2)) +
geom_point(colour = "#EC5C00") +
theme_bw() +
ggtitle("UMAP Projection of Dataset c7: 2D Visualization of Data Clusters")
library(uwot)
library(tibble)
set.seed(253)
c7_umap <- umap(c7[,1:6], init = "spca")
c7_umap_df <- c7_umap %>%
as_tibble() %>%
rename(UMAP1 = V1, UMAP2 = V2)
ggplot(c7_umap_df, aes(x = UMAP1,
y = UMAP2)) +
geom_point(colour = "#EC5C00") +
theme_bw() +
ggtitle("UMAP Projection of Dataset c7: 2D Visualization of Data Clusters")
library(uwot)
library(tibble)
set.seed(253)
c7_umap <- umap(c7[,1:6], init = "spca")
c7_umap_df <- c7_umap %>%
as_tibble() %>%
rename(UMAP1 = V1, UMAP2 = V2)
ggplot(c7_umap_df, aes(x = UMAP1,
y = UMAP2)) +
geom_point(colour = "#EC5C00") +
theme_bw() +
ggtitle("UMAP Projection of Dataset c7: 2D Visualization of Data Clusters")
library(uwot)
library(tibble)
set.seed(253)
c7_umap <- umap(c7[,1:6], init = "spca")
c7_umap_df <- c7_umap %>%
as_tibble() %>%
rename(UMAP1 = V1, UMAP2 = V2)
ggplot(c7_umap_df, aes(x = UMAP1,
y = UMAP2)) +
geom_point(colour = "#EC5C00") +
theme_bw() +
ggtitle("UMAP Projection of Dataset c7: 2D Visualization of Data Clusters")
library(uwot)
library(tibble)
set.seed(253)
c7_umap <- umap(c7[,1:6], init = "spca")
c7_umap_df <- c7_umap %>%
as_tibble() %>%
rename(UMAP1 = V1, UMAP2 = V2)
ggplot(c7_umap_df, aes(x = UMAP1,
y = UMAP2)) +
geom_point(colour = "#EC5C00") +
theme_bw() +
ggtitle("UMAP Projection of Dataset c7: 2D Visualization of Data Clusters")
